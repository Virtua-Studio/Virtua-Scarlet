// ----------------------------------
// RSDK Project: Virtua Scarlet
// Script Description: Dust Puff Object
// Script Author: Virtua Team
// ----------------------------------

// ========================
// Aliases
// ========================

private alias object.value0 : object.timer

// Property Values
private alias 0 : DUSTPUFF_SPAWNER
private alias 1 : DUSTPUFF_CHILD

// Player aliases
private alias object.left   : player.left
private alias object.right  : player.right
private alias object.xpos    : ssSonic.xpos
private alias object.ypos    : ssSonic.ypos
private alias object.value0 : ssSonic.zpos

// Tile Info
private alias 6 : TILEINFO_ANGLEA


// ========================
// Events
// ========================

event ObjectUpdate
	if object.propertyValue == DUSTPUFF_SPAWNER
		// The Spawner is, well, spawned by the [Sonic] object in order to spawn more Dust Puffs
		// Sure is a lot of spawning, huh?
		if ssSonic.ypos > 0
			// If the player is in the air, then unload
			ResetObjectEntity(3, TypeName[Blank Object], 0, 0, 0)
		else
			// Get Sonic's truncated X and Z Positions
			temp0 = ssSonic.xpos
			temp0 >>= 16

			temp1 = ssSonic[-1].zpos
			temp1 >>= 16

			// Get what type of tile it is
			Get16x16TileInfo(checkResult, temp0, temp1, TILEINFO_ANGLEA)
			
			// Is it a non-standard tile?
			if checkResult > 0
				object.timer++

				if object.timer > 2
					object.timer = 0

					PlaySfx(SfxName[Gritty Ground], false)
					
					// Randomise the dust position a little
					Rand(temp0, 40)
					temp0 -= 20
					Rand(temp1, 8)
					temp1 -= 8
					
					temp0 += screen.xcenter
					temp1 += 224
					
					temp0 <<= 16
					temp1 <<= 16
					
					// Create the Dust Puff child object, no need to setup any zpos stuff since it's a purely 2d object
					CreateTempObject(TypeName[Dust Puff], DUSTPUFF_CHILD, temp0, temp1)
					object[tempObjectPos].drawOrder = 4
				end if
			else
				object.type = TypeName[Blank Object]
				object.timer = 0
			end if
		end if
	else
		// Child Dust Puff object
		object.timer++
		if object.timer == 9
			object.type = TypeName[Blank Object]
		end if
		
		// If the player's moving, then we gotta follow along too!
		if player.left == true
			object.xpos += 0x10000
		end if
		
		if player.right == true
			object.xpos -= 0x10000
		end if
	end if
end event


event ObjectDraw
	if object.propertyValue == DUSTPUFF_CHILD
		// Find the Frame to display based on how much time the object has left
		object.frame = object.timer
		object.frame /= 3
		
		// Draw the Sprite, note the use of standard DrawSprite rather than anything fancy like the other SS objects
		// This is because the object should only ever exist on a 2d plane anyway
		DrawSprite(object.frame)
	end if
	
	// DUSTPUFF_SPAWNER doesn't draw, it spawns other Dust Puff objects to draw instead
end event


event ObjectStartup
	LoadSpriteSheet("Special/Objects.gif")
	
	// Dust Puff Frames
	SpriteFrame(-5, -4, 10, 8, 27, 58)
	SpriteFrame(-5, -4, 11, 8, 10, 58)
	SpriteFrame(-4, -4, 8, 8, 1, 58)
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("Special/Objects.gif")
	SpriteFrame(-5, -4, 10, 8, 27, 58)
	
	// Although it's used by the object, it's not to be set from the editor
	// (This object shouldn't be placed into a scene directly at all, really...)
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
